create database agency
on
(
name='agency_data',
filename='d:\db\agency_data.mdf',
size=8 mb,
filegrowth=50mb
)
log on
(
name='agency_log',
filename='d:\db\agency_log.ldf',
size=8 mb,
filegrowth=50mb,
maxsize=1gb
)
go
use agency

go
create table agent
(
a_id int identity(100,1) constraint PK__agent_id primary key,
a_name nvarchar(40) not null,
a_phone char(15),
a_email nvarchar(max),
a_address nvarchar(max)
)

go
create table client
(
c_id int constraint PK__client_id primary key,
c_fname nvarchar(40) not null,
c_lname nvarchar(40) not null,
c_number char(15),
c_email nvarchar(max)
)

go
create table category
(
cat_id int identity (10,1) constraint PK__category_id primary key,
cat_name nvarchar(40)
)

go
create table property
(
property_id int identity(10000,1) constraint PK__property_id primary key,
p_address nvarchar(max),
p_city nvarchar(40),
p_size int,
p_bedroom int,
p_parking int,
p_sale_rent bit,
a_id int constraint FK__agent_id foreign key references agent(a_id)
)

go
create table sale
(
s_id int identity(1,1) constraint PK__sale_id primary key,
a_id int constraint FK__agent_id foreign key references agent(a_id),
c_id int constraint FK__client_id foreign key references client(c_id),
p_id int constraint FK__property_id foreign key references property(p_id),
sale_date date,
sale_price money constraint CH__sale_price check(sale_price >= 1000)
)

go
create table rentdetails
(
r_period int constraint PK__rentdetails_period primary key,
r_start_date date constraint DF__rentdetails_start_date default getdate(),
r_end_date date constraint DF__rentdetails_end_date default getdate(),
r_payment_due date constraint DF__rentdetails_due_date default getdate(),
r_payment_received date constraint DF__rentdetails_received_date default getdate(),
r_amount_paid money constraint CH__rentdetails_paid check(r_amount_paid >=1000),
r_amount_due money constraint CH__rentdetails_due check(r_amount_due >=1000),
r_status nvarchar(40)
)
go
create table rent
(
r_id int identity(1,1) constraint PK__rent_id primary key,
p_id int constraint FK__property_id foreign key references property(p_id),
c_id int constraint FK__client_id foreign key references client(c_id),
a_id int constraint FK__agent_id foreign key references agent(a_id),
r_period int constraint FK__rentdetails_period foreign key references rentdetails(r_payment_due),
r_price money
)
go
create table client_preferences
(
cat_id int constraint FK__category_id foreign key references category(cat_id),
cp_location nvarchar(max),
cp_min int,
cp_max int,
cp_bedroom_min int,
cp_bedroom_max int,
cp_parking_min int,
cp_parking_max int
)

go
create table reccomendation
(
p_id int constraint FK__property_id foreign key references property(p_id),
c_id int constraint FK__client_id foreign key references client(c_id)
)

go
create table factor
(
p_id int constraint FK__property_id foreign key references property(p_id),
f_total money constraint CH__factor_total check(f_total>=1000),
f_amount int,
cat_id int constraint FK__category_id foreign key references category(cat_id)
)

insert into category (cat_id, cat_name)
values (11, 'Residential')

insert into agent (a_id, a_name, a_phone, a_email, a_address)
values (101, 'agent1', '123456789', 'agent1@gmail.com', 'address1')

insert into client (c_id, c_fname, c_lname, c_number, c_email)
values (1001, 'client1_fname', 'client1_lname', '987654321', 'client1@gmail.com')

insert into property (property_id, p_address, p_city, p_size, p_bedroom, p_parking, p_sale_rent, a_id, cat_id)
values (10001, 'property1_address', 'property1_city', 1500, 3, 1, 1, 0, 1, 11)

insert into sale (s_id, a_id, c_id, p_id, sale_date, sale_price)
values (1, 1, 1, 1, '2024-11-01', 200000)

insert into rentdetails (r_period, r_start_date, r_end_date, r_payment_due, r_payment_received, r_amount_paid, r_amount_due, r_status)
values (1, '2024-11-01', '2025-11-01', '2024-12-01', '2024-12-01', 1200, 1200, 'OnTime')

insert into rent (r_id, p_id, c_id, a_id, r_period, r_price)
values (1, 1, 1, 1, 1, 1200)

insert into client_preferences (cat_id, cp_location, cp_min, cp_max, cp_bedroom_min, cp_bedroom_max, cp_parking_min, cp_parking_max)
values (11, 'location1', 1000, 2000, 2, 4, 1, 2)

insert into recommendation (p_id, c_id)
values (10001, 11)
